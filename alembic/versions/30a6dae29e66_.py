"""empty message

Revision ID: 30a6dae29e66
Revises: 
Create Date: 2025-08-06 10:47:42.779381

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = '30a6dae29e66'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('official_link', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('company_id')
    )
    op.create_table('languages',
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('language_id')
    )
    op.create_table('locations',
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('location_point', geoalchemy2.types.Geography(geometry_type='POINT', srid=4326, dimension=2, from_text='ST_GeogFromText', name='geography', nullable=False), nullable=False),
    sa.PrimaryKeyConstraint('location_id')
    )
    op.create_table('sources',
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('link', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('source_id')
    )
    op.create_table('specialities',
    sa.Column('speciality_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('speciality_id')
    )
    op.create_table('technologies',
    sa.Column('technology_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('technology_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('language_levels',
    sa.Column('language_level_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['language_id'], ['languages.language_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('language_level_id')
    )
    op.create_table('raw_vacancies',
    sa.Column('raw_vacancy_id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('link', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('data', sa.String(), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('unpublished_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.ForeignKeyConstraint(['source_id'], ['sources.source_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('raw_vacancy_id')
    )
    op.create_table('vacancies',
    sa.Column('vacancy_id', sa.Integer(), nullable=False),
    sa.Column('raw_vacancy_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('experience', sa.Integer(), nullable=True),
    sa.Column('main_language_id', sa.Integer(), nullable=False),
    sa.Column('compensation_min', sa.Integer(), nullable=True),
    sa.Column('compensation_max', sa.Integer(), nullable=True),
    sa.Column('speciality_id', sa.Integer(), nullable=False),
    sa.Column('workload', sa.Enum('parttime', 'fulltime', name='workload'), server_default='fulltime', nullable=False),
    sa.Column('work_location_type', sa.Enum('remote', 'office', name='worklocationtype'), server_default='office', nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.company_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['location_id'], ['locations.location_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['main_language_id'], ['languages.language_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['raw_vacancy_id'], ['raw_vacancies.raw_vacancy_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['speciality_id'], ['specialities.speciality_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('vacancy_id')
    )
    op.create_table('vacancies_additional_languages',
    sa.Column('vacancy_id', sa.Integer(), nullable=False),
    sa.Column('language_level_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['language_level_id'], ['language_levels.language_level_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.vacancy_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('vacancy_id', 'language_level_id')
    )
    op.create_table('vacancies_experience_specialities',
    sa.Column('vacancy_id', sa.Integer(), nullable=False),
    sa.Column('speciality_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['speciality_id'], ['specialities.speciality_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.vacancy_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('vacancy_id', 'speciality_id')
    )
    op.create_table('vacancies_technologies',
    sa.Column('vacancy_id', sa.Integer(), nullable=False),
    sa.Column('technology_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['technology_id'], ['technologies.technology_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.vacancy_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('vacancy_id', 'technology_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name=op.f('spatial_ref_sys_srid_check')),
    sa.PrimaryKeyConstraint('srid', name=op.f('spatial_ref_sys_pkey'))
    )
    op.drop_table('vacancies_technologies')
    op.drop_table('vacancies_experience_specialities')
    op.drop_table('vacancies_additional_languages')
    op.drop_table('vacancies')
    op.drop_table('raw_vacancies')
    op.drop_table('language_levels')
    op.drop_table('users')
    op.drop_table('technologies')
    op.drop_table('specialities')
    op.drop_table('sources')
    op.drop_table('locations')
    op.drop_table('languages')
    op.drop_table('companies')
    # ### end Alembic commands ###
